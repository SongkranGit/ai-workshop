openapi: 3.0.3
info:
  title: Points Transfer API
  description: API for managing users and point transfers
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Development server

paths:
  /users:
    get:
      summary: Get all users
      operationId: getUsers
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}:
    get:
      summary: Get user by ID
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete user
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /transfers:
    post:
      summary: Create a transfer
      operationId: createTransfer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransferRequest'
      responses:
        '201':
          description: Transfer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /transfers/{id}:
    get:
      summary: Get transfer by ID
      operationId: getTransfer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Transfer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        '404':
          description: Transfer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        first_name:
          type: string
          maxLength: 3
          description: Must not exceed 3 characters
        last_name:
          type: string
          maxLength: 3
          description: Must not exceed 3 characters
        email:
          type: string
          format: email
        phone:
          type: string
        avatar_url:
          type: string
          format: uri
        bio:
          type: string
        points_balance:
          type: integer
          format: int64
          description: Balance in cents
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateUserRequest:
      type: object
      required:
        - first_name
        - last_name
      properties:
        first_name:
          type: string
          maxLength: 3
        last_name:
          type: string
          maxLength: 3
        email:
          type: string
          format: email
        phone:
          type: string
        avatar_url:
          type: string
          format: uri
        bio:
          type: string

    UpdateUserRequest:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 3
        last_name:
          type: string
          maxLength: 3
        email:
          type: string
          format: email
        phone:
          type: string
        avatar_url:
          type: string
          format: uri
        bio:
          type: string

    Transfer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        from_user_id:
          type: integer
          format: int64
        to_user_id:
          type: integer
          format: int64
        amount:
          type: integer
          format: int64
          description: Amount in cents
        amount_float:
          type: number
          format: double
          description: Amount in decimal format
        status:
          type: string
          enum: [pending, processing, completed, failed, cancelled, reversed]
        note:
          type: string
        idempotency_key:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        fail_reason:
          type: string

    CreateTransferRequest:
      type: object
      required:
        - from_user_id
        - to_user_id
        - amount
        - idempotency_key
      properties:
        from_user_id:
          type: integer
          format: int64
        to_user_id:
          type: integer
          format: int64
        amount:
          type: number
          format: double
          minimum: 0.01
          maximum: 2.00
          description: Amount with max 2 decimal places, not exceeding 2.00
        idempotency_key:
          type: string
          description: Unique key to prevent duplicate transfers
        note:
          type: string

    Error:
      type: object
      properties:
        error:
          type: string
